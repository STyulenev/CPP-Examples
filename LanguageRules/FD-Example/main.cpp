#include "SomeClass1.h"
#include "SomeClass2.h"

/*
 * Forward declaration (предварительное объявление, FD) - это механизм (правило) в C++, который позволяет объявлять идентификатор
 * до того, как он будет определен. Это означает, что можно сообщить компилятору о классе, функции или переменной до того, как они
 * будут использованы в коде. Для этого используется оператор объявления без определения. Используется в идиоме PIMPLE.
 *
 * Преимущества:
 *
 * 1. Улучшение времени компиляции. FD может сократить время, необходимое для компиляции, за счет уменьшения объема кода,
 * который должен обработать компилятор. Заголовочные файлы оказывают большое влияние на время компиляции. Используя предварительное
 * объявление, можно сократить количество заголовочных файлов в коде, тем самым улучшив процесс компиляции.
 *
 * 2. Уменьшение связанности. Отладка при включении различных модулей в один код — еще одна проблема, которую можно избежать
 * с помощью предварительного объявления. Оно ограничивает количество зависимостей, которые существуют между модулями в целом.
 * Это также может помочь в уменьшении связанности между различными частями кода.
 *
 * 3. Разрыв циклических зависимостей. Если два класса имеют циклическую зависимость, в которой один класс ссылается на другой,
 * можно разорвать цикл, используя предварительное объявление. FD сообщает компилятору о существовании класса,
 * не предоставляя его полное определение, которое может быть определено позже, с помощью его предварительного объявления.
 *
 */

int main()
{
    // Пример разрыва циклической зависимости двух классов
    SomeClass1* someClass1 = new SomeClass1();
    SomeClass2* someClass2 = new SomeClass2();

    someClass1->setSomeClass(someClass2);
    someClass2->setSomeClass(someClass1);

    someClass1->printSC1();
    someClass2->printSC2();

    delete someClass1;
    delete someClass2;

    return 0;
}
