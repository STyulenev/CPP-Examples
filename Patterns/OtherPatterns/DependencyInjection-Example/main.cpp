#include "Logic.h"
#include "Target.h"

/*
 * Dependency Injection (внедрение зависимостей) - это шаблон проектирования, который позволяет разъединять
 * компоненты в программной системе. Это означает, что вместо прямого создания и управления зависимостями внутри
 * класса мы можем внедрять их извне. Это приводит к более гибкому и поддерживаемому коду, а также к более
 * легкому тестированию и отладке.
 *
 * Одним из главных преимуществ внедрения зависимостей является его способность содействовать слабой связанности
 * между классами. Это означает, что каждый класс независим и не полагается на конкретные реализации своих зависимостей.
 * Вместо этого зависимости предоставляются классу через интерфейс, что позволяет использовать взаимозаменяемые реализации.
 * Это не только делает код более гибким, но и упрощает его расширение и изменение в будущем. Есть несколько способов добиться
 * этого, но наиболее распространенный подход — использование конструкторов и методов-сеттеров.
 */
int main()
{
    Target* target = new Target();

    target->action();

    target->setLogic(new ConcreteLogic2());

    target->action();

    delete target;

    return 0;
}
