#include <iostream>

#include "Services.h"
#include "Client.h"

/*
 * Иммитационный объект (мок-объект) — это объект , который имитирует производственный объект ограниченным образом. Имитационный объект
 * может быть полезен для тестирования.
 *
 * В модульном тестировании мок-объекты могут имитировать поведение сложных реальных объектов и полезны в том случае, когда реальный объект
 * непрактичен или невозможен в использовании в тестировании. Если объект обладает любой из следующих характеристик, может быть полезно
 * использовать фиктивный объект вместо него:
 * - объект выдает недетерминированные результаты (например, текущее время или текущую температуру);
 * - объект имеет состояния, которые трудно создать или воспроизвести (например, сетевая ошибка);
 * - медленная реализация (например, полная база данных, которую нужно было бы подготовить перед тестом);
 * - объект еще не существует или может изменить поведение;
 * - объект должен будет включать информацию и методы исключительно для целей тестирования (а не для своей фактической задачи).
 */

int main()
{
    { // Реальный код
        RealService realService;     // Создание реального объекта
        Client client(&realService); // Передача реального объекта в клиент

        int result = client.execute(5); // Вызов метода
        std::cout << "Result: " << result << std::endl; // Ожидается 10 (5 * 2)
    }

    { // Тестирование
        MockService mockService;     // Создание мок-объекта
        Client client(&mockService); // Передача мок-объекта в клиент

        int result = client.execute(5); // Вызов метода
        std::cout << "Result: " << result << std::endl; // Ожидается 6 (5 + 1)
    }

    return 0;
}
