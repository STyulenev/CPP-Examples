#include <iostream>

#include "RAIIWrapper.h"
#include "SomeClass.h"

/*
 * RAII (Resource Acquisition is Initialization) — это идиома программирования, используемая в C++ для управления ресурсами.
 * Она обеспечивает автоматическое освобождение ресурсов при выходе из области видимости объекта, которому эти ресурсы принадлежат.
 *
 * Суть RAII: ресурсы (такие как память, файлы, мьютексы и т. д.) привязываются к времени жизни объектов. Когда объект создаётся, он
 * захватывает ресурс, а когда объект уничтожается, ресурс автоматически освобождается.
 *
 * Некоторые преимущества RAII:
 * - Автоматическое управление ресурсами: ресурсы освобождаются автоматически при разрушении объектов.
 * - Устранение утечек ресурсов: исключает вероятность утечек ресурсов, так как освобождение происходит гарантированно.
 * - Простота использования: упрощает код, так как освобождение ресурсов не нужно явно прописывать в коде.
 *
 * Идиома RAII реализуется в C++ с помощью конструкторов и деструкторов классов. Конструктор отвечает за получение ресурса и его связывание
 * с объектом, а деструктор — за освобождение ресурса при уничтожении объекта.
 *
 * Идиома RAII лежит в основе «умных указателей» — классов std::unique_ptr и std::shared_ptr из стандартной библиотеки C++.
 */

int main()
{
    {
        SomeClass* someClass = new SomeClass();
        someClass->run();
    } // Утечка памяти

    std::cout << std::endl;

    {
        RAIIWrapper<SomeClass> someClass;
        someClass.get()->run();
    } // Нет утечки

    return 0;
}
