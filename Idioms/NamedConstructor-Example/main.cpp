#include "SomeClass.h"

/*
 * Идиома именованного конструктора (Named Constructor) использует набор статических функций-членов с осмысленными именами для создания
 * объектов вместо конструкторов. Конструкторы являются либо закрытыми, либо защищенными, и клиенты имеют доступ только к публичным
 * статическим функциям. Статические функции называются «именованными конструкторами», поскольку каждый уникальный способ создания
 * объекта имеет свое интуитивно понятное имя.
 *
 * В C++ конструкторы отличаются друг от друга только типом, порядком и количеством параметров. Конечно, когда класс имеет несколько
 * конструкторов, каждый конструктор имеет свое назначение. Однако в C++ трудно уловить это «семантическое» различие в интерфейсе класса,
 * поскольку все конструкторы имеют одинаковое имя, и только параметры могут различать их. Чтение кода с большим количеством вызовов
 * конструкторов, отличающихся только типом/порядком/количеством параметров, довольно неинтуитивно, за исключением исходного разработчика
 * класса. Идиома именованного конструктора решает эту проблему.
 */

int main()
{
    {
        SomeClass sc1 = SomeClass::createSomeClassWithStatus_1();
        sc1.print();
    }

    {
        SomeClass sc2 = SomeClass::createSomeClassWithStatus_2();
        sc2.print();
    }

    {
        SomeClass sc3 = SomeClass::createSomeClassWithStatus_3();
        sc3.print();
    }

    return 0;
}
