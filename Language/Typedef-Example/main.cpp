#include "Example1.h"

/*
 * Некоторые случаи использования typedef в C++:
 * - Упрощение типов указателей функций. Typedef позволяет присвоить короткий, чёткий псевдоним сложным типам указателей функций.
 * - Работа с предопределёнными типами данных. Typedef можно использовать для псевдонимов таких типов, как int, char, float и
 * их производных, например long, short, signed и unsigned.
 * - Работа со сложными структурами данных. Typedef позволяет сократить длинные имена сложных структур данных, которые легко модифицировать.
 * - Упрощение синтаксиса сложных объявлений. Часто библиотеки предоставляют зависимые от системы или конфигурации типы в виде псевдонимов
 * typedef, чтобы обеспечить согласованный интерфейс для пользователей или других компонентов библиотеки.
 * - Метапрограммирование шаблонов. Typedef необходим для многих задач метапрограммирования шаблонов, когда класс обрабатывается как
 * «функция типа во время компиляции» (до появления type_traits в C++11).
 * - В основном typedef используют, если предопределённое имя слишком длинное или сложное для повторного написания.
 *
 */
int main()
{
    Example1::test1();
    Example1::test2();

    return 0;
}
