#include "SomeClass.h"

/*
 * EBO (Empty base optimization или Empty Base Class Optimization (EBCO)), оптимизация пустого базового класса) — это оптимизация в языке C++, которая
 * позволяет размеру пустого базового подобъекта быть нулевым.
 *
 * Как известно, в C++ размер объекта любого класса не может быть нулем. Иначе сломается вся арифметика указателей, т. к. по одному адресу будет возможно
 * разметить сколько угодно разных объектов. Поэтому даже объекты пустых классов (т. е. классов без единого нестатического поля) имеют какой-то ненулевой
 * размер, который зависит от компилятора и ОС и обычно равен 1.
 *
 * Таким образом память зря тратится на все объекты пустых классов. Но не объекты их потомков, т. к. в данном случае Стандарт явно делает исключение.
 * Компилятору разрешено не выделять память под пустой базовый класс и экономить таким образом не только 1 байт пустого класса, а все 4 (зависит от платформы),
 * т. к. есть еще и выравнивание.
 */

int main()
{
    std::cout << "ISomeClass size: " << sizeof(ISomeClass) << std::endl; // 1
    std::cout << "SomeClass size: " << sizeof(SomeClass) << std::endl;   // 1

    return 0;
}
