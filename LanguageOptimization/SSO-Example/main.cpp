#include <iostream>
#include <string>

/*
 *
 * Small String Optimization (SSO) в C++ — это техника/оптимизация, которая позволяет хранить небольшие строки непосредственно внутри самого
 * объекта строки, а не выделять память в куче.
 * Такая оптимизация основана на том, что многие строки в типичных приложениях относительно короткие, и их можно хранить во внутреннем
 * буфере объекта std::string, избегая динамического выделения памяти.
 *
 * Как это работает: стандартный объект std::string обычно содержит указатель на динамически выделенный буфер, где хранятся данные
 * строки. Этот буфер может расти или уменьшаться в зависимости от длины строки, что требует выделения и освобождения памяти в куче, что
 * может быть затратно с точки зрения производительности.
 * С SSO объект std::string включает небольшой внутренний буфер для хранения коротких строк. Если длина строки превышает ёмкость этого
 * внутреннего буфера, строка переходит к динамическому выделению.
 *
 * Преимущества SSO: хранение небольших строк внутри объекта строки уменьшает необходимость в выделении памяти, улучшает эффективность
 * кэша и в итоге приводит к более быстрым и эффективным операциям со строками.
 */

void printStringInformation(const std::string& str)
{
    std::cout << "object address " << (const void*)&str        << "\t";
    std::cout << "buffer address " << (const void*)str.c_str() << "\t";
    std::cout << "value " << str << std::endl;
}

std::string getString(int i)
{
    std::string str2 (i, '-');

    printStringInformation(str2);

    return str2;
}

/*
 * Пример с длинными строками. SSO не сработало, разные буферы.
 */
void test1()
{
    std::cout << "\ntest1()\n\n";

    std::string str1(22, '+');
    printStringInformation(str1);
    str1 = getString(30);
    printStringInformation(str1);
}

/*
 * Пример с длинными строками. SSO сработало, буферы совпадают.
 */
void test2()
{
    std::cout << "\ntest2()\n\n";

    std::string str1(22, '+');
    printStringInformation(str1);
    str1 = getString(10);
    printStringInformation(str1);
}

int main()
{
    test1();
    test2();

    return 0;
}
