#include "Example1.h"
#include "Example2.h"
#include "Example3.h"

/*
 * Static в C++ — это ключевое слово, которое придаёт элементу особые характеристики. Для статических элементов выделение памяти происходит
 * только один раз, и они существуют до завершения программы.
 *
 * Некоторые случаи использования static в C++:
 * - Внутри функции. Статическая переменная после инициализации остаётся в памяти до конца программы. Например, её можно использовать
 * для записи количества раз, когда функция была вызвана.
 * - Внутри определения класса. Статические поля класса будут иметь то же значение для всех экземпляров данного класса. Например, если
 * нужно пронумеровать экземпляры класса, статическую переменную можно использовать для отслеживания последнего используемого номера.
 * - Статические функции-члены класса (методы). Статическую функцию-член можно использовать без создания объекта класса. Доступ к
 * статическим функциям осуществляется с использованием имени класса и оператора разрешения области видимости (::).
 * - Статические функции. Статические функции пришли в С++ из С. По умолчанию все функции в С глобальные и, если вы захотите создать две
 * функции с одинаковым именем в двух разных .c(.cpp) файлах одного проекта, то получите ошибку о том, что данная функция уже определена.
 * Static сделает внутреннее связывание для функции.
 *
 */

int main()
{
    {
        Example1::test1();
        Example2::test1();

        Example1::test2();
        Example2::test2();
    }

    {
        Example3::SomeClass::print();
        Example3::SomeClass::num1();
        Example3::SomeClass::num2();

        Example3::test1();
        Example3::test2();
        Example3::test3();

        Example3::test4();
        Example3::test4();
    }

    return 0;
}
